<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    
    <script src="https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <!-- <link rel="stylesheet" href="/stylesheets/home.css"> -->

    
</head>
<body style="width: auto;" >
    <main>
        <%-include('../partials/flash') %>
      </main>
    <!-- <p>
        <%=id%>
    </p> -->



    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
            <a class="navbar-brand" href="#">ShowManager</a>
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
              <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="/">Home</a>
                
              </li>
              <li class="nav-item">
               
              </li>
              <!-- <li class="nav-item">
                <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
              </li> -->
            </ul>
           
            <!-- <a class="nav-link" href="#">Login</a>
            <a class="nav-link" href="#">Register</a> -->
            <% if(!currentUser) { %>
              <a class="nav-link" href="/login">Login</a>
              <a class="nav-link" href="/newuser">Register</a>
              <% } else { %>
                <a class="nav-link" href="/getprofile">Profile</a>
              <a class="nav-link" href="/logout">Logout</a>
              <% } %>
          </div>
        </div>
      </nav>
    <div>




<!-- <%  if( currentUser )  {%>
    <p>yesssssss</p>
    <% } %> -->
    </div>
    <div id="container" class="col d-flex flex-column">
Info

    </div>
    <div id="seasons" class="col d-flex flex-column ">
        <div id="cast">
            <h1> list of season</h1>
         </div>
    </div>
    <div class="row d-flex" id="row" style=" width: auto">
      
            <h1> Cast of show</h1>
       
     </div>
 
    <script>
        f();
        async function f() {
            // e.preventdefault();
            // e.preventDefault();
            // console.log(user.id)
            const rest= await axios.get(` https://api.tvmaze.com/shows/<%=id%>`)
             console.log(rest.data)

            const para=document.createElement('div');
             para.style="width: auto;height:auto;  "
            para.className = " border border-2"
            const title=document.createElement('h6');
            let name=document.createTextNode(rest.data.name);
            title.append(name);
            para.append(title)
                    const button=document.createElement('button')
                    const img=document.createElement('IMG');
            img.src=rest.data.image.medium;
              img.className="d-block w-10"
                    img.style="height: 20rem; width: 20rem; float: left; margin: 0 0 0 15px;"
            //  button.style.color="#fff"
            let rating=document.createTextNode(rest.data.rating.average);
            var container = document.createElement("span");
            var t=document.createTextNode('Rating: ')
            container.append(t)
            // rating.style.color = "red";
            container.append(rating);
           
            // const textnode = document.createTextNode(rest.data.genres);
            const textnode = document.createTextNode(rest.data.genres);
            const gen=document.createElement('span')
            var gent=document.createTextNode(" Genres :");
            gen.append(gent);
            gen.append(textnode)
            let dd=document.createElement('span');
            var tt=document.createTextNode('Language: ')
            dd.append(tt)
          
            // container.append(t)
            const textnode1 = document.createTextNode(rest.data.language);
            let textnode2 = (rest.data.summary);
            
            
            const tagRegExp =  new RegExp('<\s*[^>]*>', 'g')




             textnode2 = textnode2.replace(tagRegExp, '');
             console.log(textnode2)
             const textnode22=document.createTextNode(textnode2);
             dd.append(textnode1)
             let ddd=document.createElement('span');
             let rt=document.createTextNode('Average runtime: ')
             ddd.append(rt);
            const textnode3 = document.createTextNode(rest.data.averageRuntime);
            // const textnode4 = document.createTextNode(rest.show.webChannel.name);
            ddd.append(textnode3)
          
           
            para.append(img);
            // para.append(button)
            para.append(gen)
            var br = document.createElement("br");
                // para.append(br)
                para.append(br);
            var br = document.createElement("br");
            // para.append(br)
            // para.append(rating)
            para.append(container)
            var br = document.createElement("br");
                // para.append(br)
                para.append(br);
            para.append(dd)
            var br = document.createElement("br");
                // para.append(br)
                para.append(br);
                para.append(ddd)
            var br = document.createElement("br");
                // para.append(br)
                para.append(br);
         
            para.append(textnode22)



            button.innerHTML="Add to wishlist"
                my_form=document.createElement('FORM');
my_form.name='myForm';
my_form.method='GET';
 const idd=rest.data.id;
//  console.log(idd)
// console.log(cast.person.id)

 my_form.action=`/userinfo/add/${idd}`;
my_form.appendChild(button);
para.append(my_form)
// if(currentUser){
//     console.log('yes ther is user')
// }
// else{
//     console.log('no user')
// }
            document.getElementById("container").appendChild(para)
        }
        third();
        async function third(){
            const rest=await axios.get(` https://api.tvmaze.com/shows/<%=id%>/cast`)
            console.log(rest.data);
            makecast(rest.data);
        }
        const makecast=(casts)=>{
            for(let cast of casts){
                const para=document.createElement('div');
                   para.style="width: 20rem; "
            para.className = "card boarder border-3"
                const button=document.createElement('button')
                if(cast.person.image){
                    // console.log(season.image.medium)
                    const img=document.createElement('IMG');
                    img.className="d-block "
                    img.style="height: 14rem; width: 15rem;"
                    img.src=cast.person.image.medium;
                    para.append(img);
                }
                const name=document.createTextNode(cast.person.name);
                const gender=document.createTextNode(cast.person.gender);
                const dob=document.createTextNode(cast.person.birthday);
                const showname=document.createTextNode(cast.character.name);
                const gen=document.createElement('span')
                let na=document.createTextNode(" Name: ");
                gen.append(na);
                gen.append(name)

                const gen1=document.createElement('span')
                let na1=document.createTextNode(" Role: ");
                gen1.append(na1);
                gen1.append(showname)
                const gen2=document.createElement('span')
                let na2=document.createTextNode("Gender :");
                gen2.append(na2);
                gen2.append(gender)

                const gen3=document.createElement('span')
                let na3=document.createTextNode("birthdate: ");
                gen3.append(na3);
                gen3.append(dob)
                para.append(gen)
                para.append(gen2)
                para.append(gen3)
                para.append(gen1)
                if(cast.person.country){
                    const country=document.createTextNode(cast.person.country.name);
                    para.append(country)
                }
              
                
               
                button.innerHTML="More info"
                my_form=document.createElement('FORM');
my_form.name='myForm';
my_form.method='GET';
const idd=cast.person.id;
// console.log(cast.person.id)

my_form.action=`/people/${idd}`;
my_form.appendChild(button);
para.append(my_form)
                document.getElementById("row").appendChild(para)
            }
        }



        second();
        async function second(){
            // const rest=await axios.get(` https://api.tvmaze.com/shows/<%=id%>/episodes`)  it is all episodes

            const rest=await axios.get(`https://api.tvmaze.com/shows/<%=id%>/seasons`)
            makeseasons(rest.data);
           
            // 
           

            
            
            
            // console.log(rest.data)
        }
        const makeseasons=(seasons)=>{
            let i=0;
          
            for(let season of seasons){
                i++;
                const text=document.createTextNode(`season ${i}`);
                const para=document.createElement('div');
                var br = document.createElement("br");
                   para.style="height:auto; width:auto;  "
            para.className = " border border-4"
                para.append(text)
                // para.append(br)
                // console.log(season.id)  //each season id
                tt();
                async function tt(){
                    const f=await axios.get(`https://api.tvmaze.com/seasons/${season.id}/episodes`)
                    // console.log(f.data);
                }
               

                // console.log(season.summary)
                if(season.image){
                    // console.log(season.image.medium)
                    const img=document.createElement('IMG');
                     img.className="d-block w-10"
                    img.style="height: 10rem; width: 10rem; float: left; margin: 0 0 0 15px;"
                    img.src=season.image.medium;
                    para.append(img);
                }
                
               let sp=document.createElement('span')
               para.append(br)
                let textnode2 = (season.summary);

            if(textnode2){
                const tagRegExp =  new RegExp('<\s*[^>]*>', 'g')




textnode2 = textnode2.replace(tagRegExp, '');

console.log(textnode2)
            }
            const textnode22=document.createTextNode(textnode2)
            //  sp.style="width:50rem;"
          sp.append(textnode22)
          
            
               
                para.append(sp);
                
                //  para.append(br)



                const button=document.createElement('button')
                button.style=" width:auto;height:auto; position: realative; right: 0; "
                // }
my_form=document.createElement('FORM');
my_form.name='myForm';
my_form.method='GET';
// const idd=result.show.id;
button.innerHTML="show episodes"

 my_form.action=`/seasons/${season.id}/episodes`;
my_form.appendChild(button);
para.append(my_form)
                
                document.getElementById("seasons").appendChild(para)

            }
            }
    
   
    </script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>
</body>
</html>